# import hyper_requests
# import json

# # Define the request parameters
# params = [
#     {'url': 'http://httpbin.org/get' , 'data': ''},
#     {'url': 'http://httpbin.org/get' , 'data': 'value3'},
#     {'url': 'http://httpbin.org/get' , 'data': 'value5'},
#     {'url': 'http://httpbin.org/get' , 'data': 'value7'},
#     {'url': 'http://httpbin.org/get' , 'data': 'value9'}
# ]

# # Create an instance of AsyncRequests and execute the requests
# returned_data = hyper_requests.get(request_params=params, workers=10)

# # Process the returned data
# for response in returned_data:

#     print(json.dumps(response, indent=2))

import asyncio
import aiohttp
import time

websites = """https://www.youtube.com
https://www.facebook.com
https://www.yahoo.com
https://www.amazon.com
https://www.wikipedia.org
https://www.google.co.in
https://www.twitter.com
https://www.bing.com
https://www.instagram.com
https://www.linkedin.com
http://www.msn.com
https://www.google.de
https://www.google.co.uk
https://www.reddit.com
https://www.ebay.com
https://www.google.fr
http://www.google.com.br
https://www.amazon.co.jp
http://www.pinterest.com
https://www.netflix.com
http://www.google.it
https://www.google.ru
https://www.microsoft.com
http://www.google.es
https://www.wordpress.com
https://www.tumblr.com
http://www.paypal.com
http://www.blogspot.com
http://www.imgur.com
https://www.stackoverflow.com
https://www.aliexpress.com
https://www.apple.com
http://www.github.com
http://www.imdb.com
https://www.google.co.kr
http://www.google.ca
https://www.whatsapp.com
https://www.amazon.in
http://www.office.com
http://www.google.co.id
https://www.example.com
https://www.amazon.de
https://www.google.pl
http://www.dropbox.com
http://www.alibaba.com
http://www.alipay.com
http://www.chrome.com
http://www.booking.com
http://www.googleusercontent.com
http://www.google.com.au
https://www.amazon.co.uk
https://www.cnn.com
http://www.bbc.co.uk
https://www.twitch.tv
https://www.wikia.com
http://www.google.co.th
https://www.google.com.ph
http://www.googleadservices.com
http://www.answers.yahoo.com"""


async def get(url, session):
    try:
        async with session.get(url=url) as response:
            resp = await response.read()
            print(f"Successfully got url {url} with resp of length {len(resp)}.")
    except Exception as e:
        print(f"Unable to get url {url} due to {e.__class__}.")


async def parallel(urls):
    start = time.time()
    async with aiohttp.ClientSession() as session:
        ret = await asyncio.gather(*[get(url, session) for url in urls])
    end = time.time()
    print(f"Took {end - start} seconds to pull {len(ret)}/{len(urls)} websites in parallel.\n","-"*50)


async def sequential(urls):
    start = time.time()
    ret=[]
    async with aiohttp.ClientSession() as session:
        for url in urls:
            res = await get(url, session)
            ret.append(res)
    end = time.time()
    print(f"Took {end - start} seconds to pull {len(ret)}/{len(urls)} websites in parallel.")



urls = websites.split("\n")
asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
asyncio.run(parallel(urls))
asyncio.run(sequential(urls))
