a="""#.##...#....|...#..|...#|...#....|.....|..##.|.|.#
||#...##|.|.##....|..#.#......#.#..#......|..#.|.#
|......#.##....||..#..||..|.....|..##....|.#.|..|#
.|...#||..||#|#.....|#...|.||.||#...#..|.##.......
...#.|.||.|.....|..##.#|....|#...|#.#|.#|...#.....
##.#....|..|.|....#.#|..##..#.......|.|.||#.......
....|..#|...|...|#..#...#....#.........#....#.|..|
....##...|..........|.|##|##..||..|..#..#|..|.....
........|..#.......|.#|............##.||.##.#..||#
.|...|##..#.|..|..|.#|.#.|#...|......#.....#...##|
............#.|.|||....|...#.#..#|.#...|.#....#|..
.....#....##....|#..##..|......|#.........|..##..|
#|.#||...|#...#|#|......#|#.|.#|#.|#...|.....#|.||
..|..#..|.#||.#.#.......#..#.#...|.#...|.|.|..|..#
.#|....#..#.|........#.....#.|....|#|#........#.|.
###|....##|#|||#.||.....#....#.#....|.#...|#..|#..
...#.##..#....|...||.#.|#.....||##|#.....|#|...|..
#..|.|.|#......|.#....#||...#.|.|..|#...|#|.|#|...
....###..|||#..##....||..|.|.#|#.....#||.......|..
|....#...#.||.|...#.#|...##.##....||.|.|##.#.#|...
#..#...#...|##....#.#|....|.#|#.|.....|##|||...#.|
..||.|.#...#.#|#...#..||.|#.|.|.|.###.....|....#..
.#|..|###.#....#.......#|.#|..#.|.||.|.||..##...#|
|..|....|#.........#|.|.....|.#...|.#|.||..|.|||.|
#...........|##|..#..##.......|||..#.....#.|#..##.
.#.#..|....|.|||###..#........|..#..|..##|...|#...
#.#..|||||....#.#..#...##....#....##.#|......##.#.
|.|#|.....|......#.....#........|.||....##|.#...|.
#....#.....#.#.|#......|#.|........|#|..#.|##.|.#.
.#|##..|.||..#|....#.|..#|#.#...###|...#.#....#...
#...#....||..#.|...||..#....|.|......|||....#.....
.#|....#|...#.#....|...|#|#.##...|.|.#||||..|.##.#
....#..#....|.|.#....|..|||#....#...|.#....#.|#.|.
.#..###|..|#.....#....|.|.|||.|.|#||#.#..|.##|...#
##.#...#|.....||.#..|.|...||.....|||.||#......|#..
||#|.|...||......#...#.|#..|..#.......##..##.#...#
...##.|#....#||.|.#.|#..........#...#.......#....|
..#...#...|#..|||..#||||....#..|.#..#.#..||.##|.||
#..|...|##||.||..|#.|.#....|.......|..#....|.#|...
...|.#####.##|####..#.|..#....#...|#.#.#|......||.
###......|.|..|#.|#....|.......|##.|#|...|.......|
##|....|#..|...#..|.||......#|.....##|...|...|..#|
..#.|.#.||...###..##.##..|....|..|....#..#...####.
.|##.#..|..|...##......#...##||........|.|....#||.
##.|#....|...|..|#.....|....|.|....|.|.|..|..#.#..
..|.|.#|.|....||#.|#...............##..|...#.....#
.#...#.......#.......#.##...#.|.|..####.||#....#||
.||#...##.#|.||..##.|....|||##...|#.|...#.#|.#....
.#|.||#..#.|#.......||.||#...........#....|###....
#|....#......##.#....|.....|##.#|.....|.#..|.....#"""
test=""".#.#...|#.
.....#|##|
.|..|...#.
..|#.....#
#.#|||#|#|
...#.||...
.|....|...
||...#|.#|
|.||||..|.
...#.|..|."""
#a=test
b=[[".|#".index(x) for x in y] for y in a.splitlines()]
w,h = len(b[0]),len(b)

import matplotlib.pyplot as plt
fig, ax = plt.subplots()
im = ax.imshow(b, vmax=2, vmin=0)#, cmap='sand')
cbar = ax.figure.colorbar(im, ax=ax)
def update_visualization(new_matrix):
    im.set_array(new_matrix)
    fig.canvas.draw()
    plt.pause(0.001)

def getAdj(x,y):
    adjs = []
    [[adjs.append(b[y+dy][x+dx]) for dx in range(-1,2) if -1 < x+dx < w and not (dx==0 and dy==0)] for dy in range(-1,2) if -1 < y+dy < h]
    return adjs

update_visualization(b)
matrices = [b]
for _ in range(1000):
    bCopy = [y[::] for y in b[::]]
    for j,y in enumerate(b):
        for i,x in enumerate(y):
            adj = getAdj(i,j)
            if x == 0 and adj.count(1) >= 3: bCopy[j][i] = 1
            if x == 1 and adj.count(2) >= 3: bCopy[j][i] = 2
            if x == 2:
                if not (adj.count(1) >= 1 and adj.count(2) >= 1): bCopy[j][i] = 0
    b = bCopy
    if b in matrices:
        firstRepeatIndex = matrices.index(b)
        repeatDistance = len(matrices) - firstRepeatIndex
        target = 1_000_000_000
        endIndex = (target - firstRepeatIndex) % repeatDistance
        print(firstRepeatIndex,repeatDistance,endIndex)
        b = matrices[firstRepeatIndex + endIndex]
        break
    matrices.append(b)
    #update_visualization(b)
    
wood = sum([sum([1 for x in y if x == 1]) for y in b])
lumberyards = sum([sum([1 for x in y if x == 2]) for y in b])
print(wood*lumberyards)

plt.show()
