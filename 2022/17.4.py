shapes = [
    """####""",
""".#.
###
.#.""",

"""..#
..#
###""",

"""#
#
#
#""",

"""##
##"""
]
winds=""">>><<<>>>><<<>>>><<<<>>><<<>><<<<><<<<>><<<<><<<><>>>><<<>>><<<<>>><>>>><<<>>>><>>><>>><<<<>>>><<>>><>>><>>>><<<<>>>><<<>>><>><<<>>><<<>>>><<<>>><>>>><<>>>><<<<>>><<>>>><<<>>>><>>><<<>><<>>>><<>>>><><<<>><<<>>>><><>>>><<><<<<>>>><<<>>>><<<><>>><<<>>>><<<>>><<<>><<<<>><<<<><<<>><<><>>><<<<>>>><<<<>><<>>>><<<<>><<<<>><<<<><<<>><<<>><<<>><<>><<>>><<<<>>><<<<>><<<><<<>><>>>><<<<>>><><<<<>><<<<><<><<<>>>><<<<>><>><<<<>>><<<>>>><<<>>><<<><<><<<>>>><<<<><><<<>>><<<<>>>><<<<>>><<<>>>><<<<><<<>>><<>><<<><>>>><<<<>>>><<<>><<<>>><<<><<<><<<<>>>><<>>>><<<>>>><><>>>><<>>>><<<>><>>>><<<<>>><<<><>>><<<><<<<>>><<<><<<>>><>>><<<>>>><>>><<<>><><>><<<<>><>>><>>>><<>><<<>><<>>><<>>>><<<<>>>><<<<>>>><<<>>><<>>>><<><<>>><<>>><<<<>>><<>><>>>><><><<<<>>>><<<<>><<<<><<<<>>>><<<>>><<><<<>>>><<><><<>>><<>><<<>>><>><<<>><<<<>>><><<>><<<>>><<<<>><>>><<>><>>><<<><>><<>>>><>>><<>>><<<<>><<<<>>>><>>><<<><<<<>>><<>>><>>><<<<>>>><<<<>><<<>>>><<>>><>>><>>><<<>><<<<>>><<<<>>>><>>><>>>><<<<><<><<<<>>>><>><>>>><<<><<<>>><>>><<<<><>>><<<>><<<>>><<<>>>><>>><>>>><<>><<>>><<<<>>>><><<<<>><<<>><<>>><>><><<>><<>>>><<<<>>>><<<>>><<>><>>><<<<><<<<>><<>>>><<<<>>>><<<>><><<<<>>>><><<<><<<<>>>><>>>><<<>>><<<<>>>><<<>>>><<>>>><<><<>><<<<>><<>>>><<<><<>><<<<>>><<<>>><<>>><<<>>>><<>>>><<>>><<<<>>><<<>>>><<>>>><<<<>>><<<>><<<>><<><<<<>><>><>><<<><<>>>><<<<><>>>><<<<><<>>><<>>>><<>>><>>><><<><<<<>>>><<>>>><<<>><<>>>><<<>>><<<>>><<<><<<<>><<<>><<<<><<>>><<<>>><<<>><<<>>>><<><>><<<><<<<>><<>><<<>><<<<>><<<>>>><>><<>>>><<<><<>>>><<<>>>><>>><<<>>>><<<<>>><<<><<>>><<<>>><<>><<>>>><<<<>>><<<><<<><>><>>><<<<><<<<><<<<>><<<<>>><<<<><<><<>>><<<<>><<<>><><>>>><>><<<<>><<>>>><><>>><><<>>><>><<<<>><>>><>><<<<><<<>>><>><<<>>>><><>>><<<>>>><<><><<<<>>><<>><<<>><<><<<<>>>><<>><>>><<>>><<>>>><<<>>><<>>>><<<<>>>><<<<>><<<<>>>><<<<>>><<<><<<>>><>>>><>>>><<<><<<<>>><><<<<>>>><>><<>>>><<<<>>><<>>><><<<<>>><<<<>>>><<<<>>>><<><>>>><<><<>>><<><<<<>>>><<<<>><<<><>>>><>>>><<>>><<<<><><<>>><<>>><><><><>>><<><<>>><>>><<<<>>>><><<<>>>><>>><<<>>><<<>>>><<<>>>><<>>><>>>><<>><<<>>><<<>><<<<><<>>>><<<<>>><<<<>>><>>><<<<>><<<<>><<<<>><<<><<<>>>><<<>>>><>>><<>><<<<><<<>>>><<<>>><<<<>>>><>><<<><<>>>><<>>><<<<>>><>>><<<>><<<<>>>><<<>><<<>>>><>>>><<<><<<<>>>><>>>><<<<>>>><<<<><<>>>><<>>><>>>><<<<>>><>>><>><<<>>><>>>><<<<>><<>>><<<>>>><<>>><<><<<<><<<>><<><<>><<<><<><<<<>><<<<><<><<>>><<<>><<>>>><<>>><<>>>><<<<>>><<<>>><<>>>><<>>>><<<<>>><><>>>><<>>>><<>><<>>><<<>><<<>><>>><<<>><<<>><<<>>><<<<><<<<>>><<<<>>>><<<>>><<>><<>>><<<><<><<>><<<<>><<><<<<>><<<<>>>><>>>><><<<>>>><<<<>>><>><<<>>>><<>>>><>>><<<>><>>>><>><>>>><<<<>>><<><><<<>>><<<<>>>><<<><>><>><<<>>>><>>>><>>>><><<<<>><<<<><><<<>>>><<>>><<<<>>><<<>>>><>>><<><<>>>><<>><<>><<<<>>>><<>>>><><<<<><<><<<<>><<>><<<<><<<><<<<>>>><<<>><<<<>><<<<>>>><<>>><<<>><>>><>>><<>><>>>><><<>><<<><<>>>><<>>><<>>><<>>><<<<>>>><<>>><>><>>><<<><<<>><<>>>><<<<>>>><<<<>>>><<>>><<<>>>><<<<>><<<<>>>><>>>><>>><>>>><<<<>><><<><<<<>>><<<>>><<>>>><>><><<<>>>><<<<>>>><<>><<>><<<><<<<><<<<>><<<<>>>><>>>><>>>><<>>><<<>>><<<>>>><<>><<<>><<<><>>><<>>>><<<><>>>><><<<<><<>><><>><>><<<>><<>>>><<>>><<<><<>>>><<<<>>>><>>>><<<<>>><<<<>>><<><<<<>><>>>><<>>>><>>>><<<>>><>><<<>><<><<<<>><<<>>>><<<<>><<<<>>><<<>>><<<>>>><<<<>>><<<>><<<<>>><<<>>>><>>>><<><>><<>>>><<<<>>><><<<<>>><><>>>><>><<<<>>><<<<>>>><<><<<>>><>>>><<<>><<>>>><<<<>><><<>>><<>>>><>><<<><<>>><<<>>><<<<>><><<><><<<<>><<<<>><<>>><<<>>>><<<<>><<<>><<<>>><<><<<<>>><<<>>><>><>>><>><>><<<<>>>><>><<<<>><<>>>><>>>><>>>><<<<>>><<<<><<>>><>>><<<<>>>><<<>>>><<>>>><<<><<<><<<<><>>>><<<>><<<>>>><<<<>><<>>><<<>>>><<<><<<>>><<><><<>>><<<>><<<<><<<<>>><<><<<>><><>>>><<>><<<<><<<<>><<<><<><<<<>>>><<>>>><<<<>><<<>>><<><>>>><<>><>><<<<>><<<>>>><>><<<<>>><><<<><<>>><>>>><<<<>>><<<><>>><>>>><<<<>>><<>><<>>><<<<><<<<>><<><<><<>><>>><<<>>>><>>><>>>><<<<><<>><>>><<<>>><>>>><<<<>>>><<>>><>>><<<<>>>><<>>>><<<>>><<<>>>><<<>><>>><<>>><<<><<<<>>>><<<>>><<>><<<<>><>>>><<>>><<<<>><<<>>>><<>>>><<>><><<<<>>><<<<>><<<>><<<<>>>><<>>><<><<>>><<>><>><>>>><<<<><<>>><<<<><<<<>><<><<>>><<<>>><<<<>><<<<>>><>><<<<>>><<<>>>><>>><>><<<>>><<>>>><<<<>>>><<>>><<<<>><<><>>><<>>><<<<>>><<<<><<>><<<<><<<>>>><<>>>><>><<<><<<<>>>><<<<>><<<<><<>>>><<<>>>><>>><>><<<<><<<<>>>><<<>>><<<>>>><><>>><<<<><<<<>>>><<<>>><<>>>><<><>><<><<<<>>>><>>>><<<>><<<>><<<<>>><<<<>><<<>><>>><<<>>>><<<<>><<<<>>>><<>>><<<>>>><<<<>>>><<<>><>><<>><><<<<>><<><><<>><<>><<<<>>><<>>>><<<<>>>><<><<<<>>>><<<>><<<<>>>><<<>>><<><>>>><<<>>><>>>><<<<>>>><>><<><<<<>>><<>>><<<<>><<<>>>><<>>>><<<><<<>>>><<<<><<<>><<<<>>><<<>><<<><<<>><>>><<<<>>><<<>>><<<>><<<>>>><<<<>>><<<<>>>><<<<>><<<<><<<>>><><<<>><<<>><<<>><<<>>><<<><<<>>>><<<>><<<<>>>><><<<<>><<<<>>><<<<>><<><<<>>>><>>><><<<<>>><>>><<<<>>>><<<<>>><<<>>>><><<>><><<><<<<><<<<>>><>><>>>><<<<><<<<>><<<><>>>><<>>><<><<>>><<>>>><<<<>>>><<><>>>><<<<><<>><<><<>><<<<>>><<<<>><<<<>>>><>><<><<<>>>><<<>><<>>>><<<><<<<>>>><<<>>><<>><<<>>>><<>><<<<>>>><<<<>><<<>>>><>><<<<><<<>>>><<<><<<>><>>><<>>>><<<<>>><<<><<><>><<><>><<<><><<<><<<<>>><<>><<<><<>><<<><<<>><<<>>><>>>><<<>>>><<<<>>>><<<>><>><<>>><<<><>>><<<>><<<><<>><>>>><><>>>><<<>>><<<>>>><>>><<<<>>><>>>><<<>>>><<>>><<>>>><<>><><>>>><<<>>>><>>><>><<>>><<>>>><>><<>>><<><>>>><<<>><<>>><><<<>><<>>>><<<<>>>><>>><<<<>><>>><<>><<><<<>>><>><<<><<>><<>>><<><><<<<>>>><<<>>><>>>><>><<<>>><<<>>><<<<>>>><><<<<>>><<<<><<<>><<<<>>>><>>>><<>><<<<>>>><<>>><>><<><<<>>><<<>>>><<<<>>><<<>>><>>><<<>>><<<<>><<<><<>>>><><<><<>><>><<<<>>>><>><<>><<<<>>><<>>>><<<>><<<>>><<<>>><<<<>>><<<<>>>><<<<>><>>>><<<<>>>><>>>><>>><<<<><<<<>>><><<>>><<>>>><<<<>><<<<>>><<<>><<<>>>><<<<>>><<<>>>><<<><>>>><>>><<>>>><<<><<<><>>>><<<>>>><<>>>><>>>><<><<<<>><<<<><>>>><<><<<<>>>><>>><<<<>>><<>>>><<<><<<<><><<>>><<<>>><<>><<<>>>><>>>><<<<>>>><<<>>><<<>><<><<<>>>><<<<>><<<>>><>>><>><<<>>>><<<<>>>><<><<<>>>><>>>><<<>>>><<>><<<<>>><<<>>><><><<<<>>>><<<>>>><><<>><<>>>><<<<>>>><<<><<>>>><>>><<<<>><<>><<<>><><<<<>>><><<<>>>><<<><<<>>><<<<>><<<<>>>><<<>>>><<>><<<>>><<<<>>><><<>><<<<>>>><<<<>>><<>>><<<<><>><>>><<<<><>>>><<>><>><<<>>>><<<>>><<>><<><>>>><<<>>>><<<<>>>><<>>>><<<<>>>><<<>>>><<<>><<<>>><>>><>>><>>>><<>>>><<<>>><<<<>>><<>><<<><<<<>><>>><<<>>><<<>>><><<>>><>>>><<<<>>><<>>>><<<>>>><<<<>>><<<<>>>><<<>>><<><<>>><<>>>><<<>>><<><<<>>>><><<<<><><<><<>><>>>><<>>><><<><<<<>>><<<>>><<<<>>>><>><<<<>><<<<>><<><<<>>><>>>><>>>><<<<>>>><<<<><><<<><>>><<<<>><>><><<<<>>><<<><<><<<<>><<><>>>><>>>><<<>>>><<><<>>><<>><<<<>>><<<<>>>><>>>><<<<>><<>>><<<>>>><<<>>>><<<>>>><<<<>>><<<><<<><>>><<<><>>><<<><>>><>><<<>>><<<>>><<<<>>>><<>><<<>><>><<<<>>><<<>>>><<><<<>>>><<<<><><>>>><<>><>>>><<>>><<>>>><<>>>><>>><>>><<<>>><<>>><>><>>>><<<>>><>><>>>><<<>>><<><<<>>>><<<>><<><<<>>><<<<>>><<<<><<<<>>>><<<>><<<<>>><<<<>>><<>><<<<><<<><<<<>>>><<<<><>>>><>>>><<><<<<>><<>><<>>><>>><>>>><<<>>>><>><<<<>>>><<<<>><<<<>><<<>><<<<><>>>><>><<<>>><>><>>><>>><<<<>>><<>><<<>>><<<<>>><<><<<>>><<<>>>><<>>><<<<>><<<<>>><<><<>>><<<<>>><<<>>><<<<>>><<>>><<<>><<<>>>><<<>><<<<>>>><<>><>>>><<>>><>><<<>><<<<>>>><<>><<<<><<<>>>><<<>>><<>><<<>>>><<>>><<<<>><<>><<>><<<<>>>><<<>>><<<<>>>><<<>>><>>>><<<>>>><<>><<<<>><<>>>><<<<><<<>><<<<><<>>>><<<<>>>><<>>><<<<><<<>>>><<<>><<><<<<><><<>>>><><<<<><<<><<<<>><<><<<<><<<<>><<<>><<>><<<<><<>>><<><<<>><<>>><<<>>>><<>><<>><<<<>>><<<<>><<>>>><<<>>><<<<>><<>>><<><><<><<>>>><>><>>><<<><<<<>><<><<>>><<<<><<>>><>>>><<<><<><<>>>><><>>>><<>><<><>>><<><<<<>><<>>>><<>>><<<>>>><<<><>>><<>>>><>><<><<>><<<><<<>><<>><>><><><<>>>><<<>>><>>><<<<>>><<<>>><<<>><>>><<<<>><><<<><>>>><<>>><>>><<<>>><<<>><>>>><<>>><<<><<<>>>><><<<<>>><<<<>><<>><<<><<<<>><<<>>>><<<><>><<<<><<<<>>><<<>>>><<<<><<<>>><>>>><<<<>>><<><<>>>><<><<>><<>><>><<>>>><<<<>>><>>>><<>>>><<><<<>>><>>><<<>>>><<<<>><<<<><<<><<<><<<><<<>>>><<><<><><>><>>><<<>><>>><<<><>>><<>>><<<<><<<>>><<<<>>><<<<>>><<>>>><<<>>>><<<>><<<<><<<<>><<<><<<><<<>><<>>>><<<>><<<><>>><>>><<><<<>>><<<<>><<<>>>><>><<<>><>>><><<<><<<<><<<><<<>>><<><<>>>><<>>><><<<<>>>><<<>>>><<>><<<>><<>>><<><<<>><<>><<>><<<<>><<<<>><<<>>>><>>>><<>>><<<<><<>><<<>><<>>>><<<<>>><>><>><<<>>>><>>><<<>>><<>><<<<>><<><<<><<<<>><<<<><>><<<>>>><<<>>>><<>>><>><<>>>><<<>><<<>>>><><<<><<>><>><<>><<>>>><<>>><<<<><<><>>><><<<>>><<>>><<<>>><<<>>>><>>><<<<>>>><<<>>><<>><<<>>><<<>>><>>>><<><<<<>>>><<<><<<<>>><<<<>>><>><<<>>>><<><<><<<>>>><><<<>><<<<><<<>>><>>><>><<><<>><<<<>>>><>>><><<<<>>><<>><<<>>><><<<>>>><<<<>>><<>><<<><<><<<<>>>><<<>>>><<<>>>><><>><<<>>>><<><>>>><<<<>>>><<<>>>><<>>><<<<>>>><>>><>>><<>>>><<<><<>>>><><<<<>><<<>>>><<><<<<>>>><<>>>><><<<>>>><>><<<>>>><<>>><<>>><><<<>>><<<>><><<<<>>><<>>>><>>><<<>>><<>>>><<>><<<<><<>><<<>><<<<>>><>><<<<>>><<<>>>><>>>><<<>>>><>>><<<<>>><>><<<<><<<>><>>><>>>><<>>>><<>><<<>><<>>><<<>><<<<><<>><<<<>><<<<>><<<><>>>><>><><<<><<><>>><<<<><<<>><<>>><>>><<<<>><<<><<<>><>>>><<<<><><<>><<<<>><<<<>><>>>><><<<><>>><<<<>>>><<<>>><<>>>><<<>><<<>><>><<<><<<<>>><<<>>>><<<<>>>><<<>><<<<>>><>><<<<>><><<<<>><><<<<>><<>><<<<>>><>>>><<<<>>>><>>><>><>>>><<<>>>><><<<><<<>><<<<>>><<<<>><<<>>><<<<><<<>>><<<>>><><>>>><<<><<<<><<<>><<<<>>><<><<<<>><>>><<<<>>><>><>>>><><<<>>>><<><>>>><<><<<>>><<>>><<<<><>>><<><<>>><<<>>><><<<>>><>>><<<<>>>><<<>>>><<>>><<<<>>>><<>><<<<>><<<<><<>><<<<><<<>>>><<<><>>>><<>>>><<<>>>><<<>><<<>>><<>>>><>>><<<<>><<<<>><>>><<<<>><<>>><<<<><<<<>><<<<>>><<>><<><<<>><<>>>><<<<>><<<<>>><>>>><<>><>>>><<<><<<<>>><>>>><<<>><<<<>><<>>><<<>><<><>><<><>>>><>>>><<<<><>>><>><<<<>>>><<<>>>><<<>>>><<<>>>><<<><<<>>><<<>><<<<><<<><<>><<<>>>><<<>>>><<<<><>>><<><<<<>>>><>><<>>>><<>>>><>>><<<>>>><<><<<<>>>><>><><<<<>><>>><>>>><<<>>><<<<>>><<<<><<<>>>><>><<<><>>><<<<>>><>><>>><<<>><>><<><<<>><>>>><<><<<>>>><><<<>>>><<>><<>>>><>><><<<<><<<>>>><<<><<<>><<<<>><<><<>><>>>><<<<>>>><>><<<<>>>><<<<><>>>><<<><<<<><>><<>><<<>>><>><<<<>>><><<<>>><>><<>><<>>>><<<<>>><<<>>>><<<<><>><<<><<<><<><<<><<<<>>>><><><<><<>>><<>>><<>><>>><>>>><<><<<><>>><<<<>><<><<>><<<<>><<>>>><<<>>>><>>><<<>>><<<>>><<<>><>><<<<>>>><<>>>><<<>>>><>><<<>>>><<<>>>><<<>>><<>><<>><<<<><<><>><><<>><<>>>><<<>><>>><><<><<<><<>><<>>><<<>>>><<><>>>><<<<><<>>><><<<<>><<<>><<<<><<><<>>><>><>>>><<>>>><<<>>><<>>>><<<<>>>><<<>>>><>>>><>>><<<><>><<><>><<<<>>><<<<>>>><<<<>>>><>><><<<>>>><<<<>><<>>>><<<<><><<<>>>"""
testWinds=""">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>"""
winds=testWinds
    
shapesLen = len(shapes)
shapeIndex = 0
winds = ["< >".index(x)-1 for x in winds]
windsLen = len(winds)
windex = 0
rockFallCount = 0
tickCount = 0
dirs =[[-1,0],[0,1],[1,0]]
grid = []
blankRow = "."*7
tempGrid = grid.copy()

def printShape(gridToPrint,shape,anchor,save=False):
    for j,row in enumerate(shape):
        gridRow = [x for x in gridToPrint[j+anchor[1]]]
        for i,x in enumerate(row):
            if x=="#": gridRow[i+anchor[0]] = x if save else "@"
        gridToPrint[j+anchor[1]] = "".join(gridRow)
    if save: 
        global grid
        grid = gridToPrint

def checkCanMove(dir,shape,gridToCheck,anchor):
    if dir == [-1,0]: #left side
        edges = [[ min([i for i,x in enumerate(y) if x=="#"]), j ] for j,y in enumerate(shape)]
    if dir == [0,1]: #bottom side
        edges = [[ i, max([j for j in range(len(shape)) if shape[j][i]=="#"]) ] for i in range(len(shape[0]))]
    if dir == [1,0]: #right side
        edges = [[ max([i for i,x in enumerate(y) if x=="#"]), j ] for j,y in enumerate(shape)]
    for edge in edges:
        x,y = edge
        xx,yy = anchor
        xxx,yyy = dir
        xxxx,yyyy = x+xx+xxx,y+yy+yyy
        if 0>xxxx or xxxx>6: return False #hitting wall
        if yyyy > len(gridToCheck)-1: return False #hitting bottom
        if gridToCheck[yyyy][xxxx] == "#": return False #hitting block
    return True
    

def rotateClockwise(shape):
    return list(zip(*shape[::-1]))

def getLastTop():
    for i,row in enumerate(grid[:9]):
        if "#" in row:
            return i
    return 0

def printFrame(shape,anchor):
    x,y=anchor
    tempGrid = grid.copy()
    printShape(tempGrid,shape,[x,y])
    for line in tempGrid: print(line)
    print()

heights = []
differences = []
differentials = []
heightAnswer = 0
def mainLoop(n,stopPoint,stop=False):
    global grid, tickCount#, lastTopDepth
    lastTopDepth = 0
    for rockFallCount in range(n):
        #patternFinding
        if stop:
            if not rockFallCount % stopPoint and rockFallCount!=0:
                    gridHeight = len(grid)
                    lastTopDepth = getLastTop()
                    global heightAnswer
                    heightAnswer2 = heightAnswer+gridHeight-lastTopDepth
                    heights.append(heightAnswer2)
                    print(heights)
                    repeatNumber = rockFallCount//stopPoint
                    control = heights[0]
                    difference = heightAnswer2 - (control * repeatNumber)
                    differences.append(difference)
                    print(differences)
                    if repeatNumber > 1:
                        differential = differences[-2] - difference
                        differentials.append(differential)
                        print(differentials)
                        if repeatNumber>6 and differentials[-3:] == differentials[:3]: break

        if not rockFallCount%1000:
            try:
                i = grid.index("#"*7)
                gridHeight = len(grid)
                heightAnswer += gridHeight-i
                grid = grid[:i]
            except: pass
            if not rockFallCount%10000:print(rockFallCount,"/",n)

        lastTopDepth = getLastTop()
        grid = grid[lastTopDepth:]
        x,y = 2,0
        shapeIndex = rockFallCount % shapesLen
        shape = shapes[shapeIndex].splitlines()
        shapeHeight = len(shape)
        newLinesCount = shapeHeight+3
        grid = [blankRow for _ in range(newLinesCount)] + grid
        #printFrame(shape,[x,y])
        while True:
            #blow sideways
            windex = tickCount % windsLen
            wind = winds[windex]
            dir = [wind,0]
            canMoveSide = checkCanMove(dir,shape,grid,[x,y])
            if canMoveSide: 
                xx,yy = dir
                x,y = x+xx, y+yy
            tickCount += 1
            #printFrame(shape,[x,y])
            #try and drop 1 and place it if false (it cant)
            dir = dirs[1]
            canMoveDown = checkCanMove(dir,shape,grid,[x,y])
            if canMoveDown:
                xx,yy = dir
                x,y = x+xx, y+yy
                #printFrame(shape,[x,y])
            else:
                #printFrame(shape,[x,y])
                break
        printShape(grid,shape,[x,y],save=True)


    gridHeight = len(grid)
    heightAnswer += gridHeight-lastTopDepth
    return heightAnswer 

def reset():
    global grid, tickCount,heights,differences,differentials,heightAnswer
    heights = []
    differences = []
    differentials = []
    heightAnswer = 0
    grid, tickCount = [], 0

totalIterations = 1000000000000
lowestCommonMultiple = windsLen*shapesLen
print("lowestCommonMultiple:",lowestCommonMultiple)
mainLoop(lowestCommonMultiple*windsLen,lowestCommonMultiple,True)
heights = heights[:-3]
differentials = differentials[:-3]
print("differentials:",differentials)

# y = mainLoop(lowestCommonMultiple)
# def patternFinder(nn):
#     lastDiff = 0
#     for n in range(1,nn):
#         reset()
#         x=mainLoop(lowestCommonMultiple*n)
#         #print(n)
#         global y
#         y *= n
#         #print("mainLoop(lowestCommonMultiple) * n:",y)
#         diff = x-y
#         #print("difference:", diff)
#         #print()
#         print(n,lastDiff-diff)
#         lastDiff = diff
# patternFinder(10)
# #write the patternLen after the above^^^^
#pattern1 = [0,8,2,5,5,7,2,7]


#write the patternLen after the above^^^^
# pattern1 = [0, 26, 28, 37, 33, 33, 34, 34, 46, 19, 8, 29, 11, 27, 30, 47, 28, 21, 44, 38, 37, 14, 15, 13, 30, 27, 36, 34, 35, 30, 31, 47, 23, 16, 19, 16, 29, 29, 42, 29, 28, 39, 33, 36, 27, 7, 27, 15, 29, 30, 42, 28, 24, 43, 41, 33, 24, 7, 18, 27, 27, 36, 35, 31, 31, 37, 43, 24, 10, 22, 15, 32, 29, 41, 27, 29, 41, 39, 32, 23, 9, 25, 17, 29, 29, 44, 27, 28, 35, 45, 27, 24, 14, 18, 24, 29, 37, 34, 28, 34, 39, 44, 17, 14, 23, 11, 27, 32, 42, 32, 24, 43, 39, 35, 17, 12, 21, 24, 27, 33, 37, 
# 29, 34, 30, 47, 25, 19, 14, 17, 28, 29, 36, 36, 30, 37, 33, 45, 20, 10, 25, 13, 30, 30, 45, 30, 18, 43, 42, 35, 12, 16, 14, 29, 26, 36, 36, 31, 34, 33, 45, 23, 16, 16, 15, 30, 32, 39, 29, 30, 40, 33, 36, 27, 7, 29, 10, 30, 34, 39, 31, 24, 39, 44, 31, 22, 10, 16, 28, 26, 38, 33, 31, 29, 41, 43, 21, 13, 22, 15, 28, 31, 39, 31, 25, 43, 39, 32, 25, 7, 25, 19, 29, 29, 40, 28, 28, 38, 42, 27, 24, 15, 19, 26, 27, 36, 33, 31, 35, 34, 47, 21, 9, 27, 8, 26, 34, 41, 32, 23, 43, 38, 37, 15, 14, 17, 
# 27, 26, 36, 35, 31, 32, 30, 48, 25, 16, 18, 16, 29, 29, 40, 31, 29, 41, 29, 42, 24, 8, 27, 13, 30, 29, 44, 30, 21, 43, 41, 32, 18, 11, 14, 30, 30, 35, 35, 30, 32, 38, 39, 28, 12, 18, 18, 30, 28, 41, 31, 26, 42, 36, 32, 27, 9, 23, 14, 31, 27, 46, 
# 28, 29, 36, 45, 27, 23, 15, 12, 28, 27, 39, 33, 30, 33, 36, 47, 19, 11, 23, 14, 26, 33, 40, 34, 21, 45, 37, 36, 19, 11, 23, 22, 24, 32, 39, 29, 32, 35, 42, 29, 20, 13, 20]
pattern1 = [0]+differentials
patternAfter = pattern1[1:]
patternLen = len(patternAfter)

#get the top
topSectionIterations = totalIterations % lowestCommonMultiple
heights1=heights
reset();topBodyLength = mainLoop(topSectionIterations,None)
#get the body
lowestCommonMultiple = windsLen*shapesLen*patternLen #this is after filling in the above manually
bodyRepeats = totalIterations // lowestCommonMultiple
reset()
mainLoop(lowestCommonMultiple*3,lowestCommonMultiple,True)
finalSubtraction =  differentials[-1]
#patternFinder(5)
#finalPattern = patternAfter[-1] #then fill this in


#get the body
reset();repeatedBodyLength = heights1[-1]#27850032 #then fill this in      #mainLoop(lowestCommonMultiple)
print("repeatedBodyLength*bodyRepeats",repeatedBodyLength*bodyRepeats)
answer = repeatedBodyLength*bodyRepeats - finalSubtraction*(bodyRepeats-1) + topBodyLength-finalSubtraction
print(answer)


#1581574352532 failed too high